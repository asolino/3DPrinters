# Voron Design VORON2 250mm SKR 1.3 TMC2209 UART config

# *** THINGS TO CHANGE/CHECK: ***
# MCU paths                         	[mcu] section
# Thermistor types                      [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
# Z Endstop Switch location       	[homing_override] section
# Z Endstop Switch  offset for Z0  	[stepper_z] section
# Probe points                          [quad_gantry_level] section
# Min & Max gantry corner postions      [quad_gantry_level] section
# PID tune                              [extruder] and [heater_bed] sections
# Fine tune E steps                     [extruder] section

# ========================== Pin Definitions ========================
# X_STEP_PIN         2.2
# X_DIR_PIN          2.6
# X_ENABLE_PIN       2.1
# X_MIN_PIN          1.29
# X_MAX_PIN          1.28
# X_UART_RX          1.17
# X_UART_TX          4.29

# Y_STEP_PIN         0.19
# Y_DIR_PIN          0.20
# Y_ENABLE_PIN       2.8
# Y_MIN_PIN          1.27
# Y_MAX_PIN          1.26
# Y_UART_RX          1.15
# Y_UART_TX          1.16

# Z_STEP_PIN         0.22
# Z_DIR_PIN          2.11
# Z_ENABLE_PIN       0.21
# Z_MIN_PIN          1.25
# Z_MAX_PIN          1.24
# Z_UART_RX          1.10
# Z_UART_TX          1.14

# E0_STEP_PIN        2.13
# E0_DIR_PIN         0.11
# E0_ENABLE_PIN      2.12
# E0_UART_RX         1.8
# E0_UART_TX         1.9

# E1_STEP_PIN        0.1
# E1_DIR_PIN         0.0
# E1_ENABLE_PIN      0.10
# E1_UART_RX         1.1
# E1_UART_TX         1.4

# HE1                2.4    
# HE0                2.7
# BED                2.5
# TH1 (H1 Temp)      0.25
# TH0 (H0 Temp)      0.24
# TB  (Bed Temp)     0.23
# FAN                2.3
# SERVO              2.0
# ===================================================================

[mcu]
#	mcu for X/Y/E steppers main MCU
#	[X in X] - B Motor
#	[Y in Y] - A Motor
#	[E in E0] - Extruder
#	obtain definition by "ls -l /dev/serial/by-path/" then unplug to verify
#--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1768_10700112C81848AFFFC6185DC32000F5-if00
#--------------------------------------------------------------------

[mcu z]
#	mcu for Z steppers
#	[Z in X] - Front Left
#	[Z1 in Y] - Rear Left
#	[Z2 in Z] - Rear Right
#	[Z3 in E0]- Front Right
#	obtain definition by "ls -l /dev/serial/by-path/" then unplug to verify
serial: /dev/serial/by-id/usb-Klipper_lpc1768_21A00011A88C3CAF96BE705CC42000F5-if00

[include ebb42.cfg]
[include mmu/base/*.cfg]
[include mmu/optional/client_macros.cfg]
[include klicky/klicky-probe.cfg]
[include lcd_tweaks.cfg] 
[include neopixels.cfg]
[include mainsail.cfg]

[resonance_tester]
accel_chip: adxl345
probe_points:
    100, 100, 20

[printer]
max_accel: 6000
max_accel_to_decel: 6000
kinematics: corexy
max_velocity: 500
max_z_velocity: 30 #Max 50
max_z_accel: 300   #Max 800
square_corner_velocity: 5.0  #Can experiment with 8.0, default 5.0

#####################################################################
# 	Optional Settings
#####################################################################
# Pause/Resume Functionality
[pause_resume]
recover_velocity: 300

# This adds the 'respond' G-Code that you can use to send commands back to OctoPrint
[respond]
default_type: echo

[force_move]
enable_force_move: true


#####################################################################
# 	X/Y Stepper Settings
#####################################################################
[stepper_x]
#connected to X on mcu_xye (B Motor)
step_pin: P2.2
dir_pin: P2.6
enable_pin: !P2.1
rotation_distance: 40
microsteps: 8
full_steps_per_rotation: 400 # LDO 0.9 degree stepper
endstop_pin: ^EBB42:PB6
position_min: 0
position_endstop: 246
position_max: 246
homing_speed: 100
second_homing_speed: 4
homing_retract_dist: 1.5
homing_positive_dir: true

#Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: P1.17
interpolate: True
run_current: 0.75
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_y]
#connected to Y on mcu_xye (A Motor)
step_pin: P0.19
dir_pin: P0.20
enable_pin: !P2.8
rotation_distance: 40
microsteps: 8
full_steps_per_rotation: 400 # LDO 0.9 degree stepper
endstop_pin: P1.26
position_min: 0
position_endstop: 251
position_max: 251
homing_speed: 100
second_homing_speed: 4
homing_retract_dist: 1.5
homing_positive_dir: true

#Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: P1.15
interpolate: True
run_current: 0.75
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
# 	Z Stepper Settings
#####################################################################
# Z MCU - In X Position
# Z0 Stepper - Front Left
[stepper_z]
step_pin: z:P2.2
dir_pin: !z:P2.6
enable_pin: !z:P2.1
endstop_pin: z:P1.25
#   Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
#   (+) value = endstop above Z0, (-) value = endstop below
#	Increasing position_endstop brings nozzle closer to the bed
#   After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: 0
position_max: 185
position_min: -10
homing_speed: 15.0
second_homing_speed: 3.0
homing_retract_dist: 3.0
homing_positive_dir: false
microsteps: 16
gear_ratio: 80:16
full_steps_per_rotation: 200 # SO 1.8 degree stepper
rotation_distance: 40

#Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: z:P1.17
interpolate: True
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

# Z MCU - In Y Position
# Z1 Stepper - Rear Left
[stepper_z1]
step_pin: z:P0.19
dir_pin: z:P0.20
enable_pin: !z:P2.8
microsteps: 16
gear_ratio: 80:16
full_steps_per_rotation: 200 # SO 1.8 degree stepper
rotation_distance: 40

# Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: z:P1.15
interpolate: True
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

# Z MCU - In Z Position
# Z2 Stepper - Rear Right
[stepper_z2]
step_pin: z:P0.22
dir_pin: !z:P2.11
enable_pin: !z:P0.21
microsteps: 16
gear_ratio: 80:16
full_steps_per_rotation: 200 # SO 1.8 degree stepper
rotation_distance: 40

# Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: z:P1.10
interpolate: True
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

# Z MCU - In E0 Position
# Z3 Stepper - Front Right
[stepper_z3]
step_pin: z:P2.13
dir_pin: z:P0.11
enable_pin: !z:P2.12
microsteps: 16
gear_ratio: 80:16
full_steps_per_rotation: 200 # SO 1.8 degree stepper
rotation_distance: 40

# Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: z:P1.8
interpolate: True
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
# 	Extruders
#####################################################################
# Extruder now defined in EBB42.cfg

#####################################################################
# 	Z CALIBRATION
#####################################################################
[z_calibration]
probe_nozzle_x: 173
probe_nozzle_y: 251
#   The X and Y coordinates (in mm) for clicking the nozzle on the
#   Z endstop.
probe_switch_x: 171
probe_switch_y: 234
#   The X and Y coordinates (in mm) for clicking the probe's switch
#   on the Z endstop.
probe_bed_x: 150 #default from relative_reference_index of bed_mesh
probe_bed_y: 150 #default from relative_reference_index of bed_mesh
#   The X and Y coordinates (in mm) for probing on the print surface
#   (e.g. the center point) These coordinates will be adapted by the
#   probe's X and Y offsets. The default is the relative_reference_index
#   of the configured bed_mesh. It will raise an error if there is no
#   probe_bed site and no bed_mesh with a relative_reference_index
#   configured.
switch_offset: 0.54

#   The trigger point offset of the used mag-probe switch.
#   This needs to be fined out manually. More on this later
#   in this section..
max_deviation: 1.0
#   The maximum allowed deviation of the calculated offset.
#   If the offset exceeds this value, it will stop!
#   The default is 1.0 mm.
samples: 5
#   The number of times to probe each point. The probed z-values
#   will be averaged. The default is from the probe's configuration.
#samples_tolerance: default from "probe:samples_tolerance" section
#   The maximum Z distance (in mm) that a sample may differ from other
#   samples. The default is from the probe's configuration.
#samples_tolerance_retries: default from "probe:samples_tolerance_retries" section
#   The number of times to retry if a sample is found that exceeds
#   samples_tolerance. The default is from the probe's configuration.
#samples_result: default from "probe:samples_result" section
#   The calculation method when sampling more than once - either
#   "median" or "average". The default is from the probe's configuration.
#clearance: 2 * z_offset from the "probe:z_offset" section
#   The distance in mm to move up before moving to the next
#   position. The default is two times the z_offset from the probe's
#   configuration.
#position_min: default from "stepper_z:position_min" section.
#   Minimum valid distance (in mm) used for probing move. The
#   default is from the Z rail configuration.
speed: 200
#   The moving speed in X and Y. The default is 50 mm/s.
#lift_speed: default from "probe:lift_speed" section
#   Speed (in mm/s) of the Z axis when lifting the probe between
#   samples and clearance moves. The default is from the probe's
#   configuration.
lift_speed: 10
#probing_speed: default from "stepper_z:homing_speed" section.
#   The fast probing speed (in mm/s) used, when probing_first_fast
#   is activated. The default is from the Z rail configuration.
#probing_second_speed: default from "stepper_z:second_homing_speed" section.
#   The slower speed (in mm/s) for probing the recorded samples.
#   The default is second_homing_speed of the Z rail configuration.
probing_second_speed: 3
#probing_retract_dist: default from "stepper_z:homing_retract_dist" section.
#   Distance to backoff (in mm) before probing the next sample.
#   The default is homing_retract_dist from the Z rail configuration.
probing_first_fast: true
#   If true, the first probing is done faster by the probing speed.
#   This is to get faster down and the result is not recorded as a
#   probing sample. The default is false.

#####################################################################
# 	Probe
#####################################################################
[probe]
# Inductive Probe
# This probe is not used for Z height, only Quad Gantry Leveling
#   Z_MAX on mcu_z
#   If your probe is NO instead of NC, add change pin to !z:P1.24
pin: ^EBB42:PB8
x_offset: 0
y_offset: 20
#z_offset: 6.42
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 1.0
samples_tolerance: 0.015
samples_tolerance_retries: 10


#####################################################################
# 	Fan Control
#####################################################################
[heater_fan hotend_fan]
# Hotend Fan - XYE board, HE1 Connector
pin: EBB42:PA1
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
#If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[fan]
# Print Cooling Fan - XYE board, Fan Pin
pin: EBB42:PA0
#kick_start_time: 0.5
#depending on your fan, you may need to increase or reduce this value
#if your fan will not start
#off_below: 0.13
#cycle_time: 0.001

[output_pin exhaust_fan]
pin: z:P2.7
pwm: True
value: 0

[heater_fan controller_fan]
# Controller fan - Z board, HE1 Connector
pin: z:P2.4
kick_start_time: 0.500
heater: heater_bed
heater_temp: 45.0

#####################################################################
# 	Bed Heater
#####################################################################
[heater_bed]
# SSR Pin - Z board, Fan Pin
heater_pin: z:P2.3
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: z:P0.23
smooth_time: 3.0
#Adjust Max Power so your heater doesn't warp your bed
max_power: 0.5
min_temp: 0
max_temp: 115

#####################################################################
# 	Chamber Temperature Sensor
#####################################################################
[temperature_sensor chamber]
sensor_type: ATC Semitec 104GT-2
sensor_pin: z:P0.24
min_temp: 0
max_temp: 100
#   See the "extruder" section for the definition of the above
#   parameters.
gcode_id: C
#   See the "heater_generic" section for the definition of this
#   parameter.

#####################################################################
# 	MCU Temperature Sensors
#####################################################################
[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################
[idle_timeout]
gcode:
   TURN_OFF_HEATERS
   M84                            ; disable steppers
   SET_PIN PIN=exhaust_fan value=0 ; Turn off exhaust
   M117 Timeout
# 30 min
#timeout: 86400
timeout: 1800

[safe_z_home]
home_xy_position: 173,251
speed: 60.0
z_hop: 10.0
z_hop_speed: 10.0

[quad_gantry_level]
#   Use QUAD_GANTRY_LEVEL to level a gantry.
#   Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
#   MAX (250, 250), (300,300), or (350,350) depending on your printer size
#   to respective belt positions
#--------------------------------------------------------------------
# 	Gantry Corners for 250mm Build

#   Use QUAD_GANTRY_LEVEL to level a gantry.
gantry_corners:
   -58,-5
   308,330
#   Min & Max gantry corners - measure from nozzle at MIN (0,0) and MAX (250,250) to respective belt positions
points:
   20,20
   20,200
   220,200
   220,20

#--------------------------------------------------------------------
speed: 500
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.01
max_adjust: 8

#####################################################################
# 	Displays / LEDs
#####################################################################
[display]
##	mini12864 LCD Display
lcd_type: uc1701
cs_pin: P1.18
a0_pin: P1.19
encoder_pins: ^P3.25,^P3.26
click_pin: ^!P0.28
contrast: 63
display_group: __voron_display

[neopixel fysetc_mini12864]
##	To control Neopixel RGB in mini12864 display
pin: P1.21
chain_count: 3
initial_RED: 0
initial_GREEN: 1
initial_BLUE: 0.0
color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob

[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
	SET_LED LED=fysetc_mini12864 RED=0 GREEN=1 BLUE=0.2 INDEX=1
        SET_LED LED=fysetc_mini12864 RED=0 GREEN=1 BLUE=0.2 INDEX=2 
        SET_LED LED=fysetc_mini12864 RED=0 GREEN=1 BLUE=0.2 INDEX=3 TRANSMIT=0

# Run-time configurable output pins (one may define any number of
# sections with an "output_pin" prefix). Pins configured here will be
# setup as output pins and one may modify them at run-time using
# "SET_PIN PIN=my_pin VALUE=.1" type extended g-code commands.
[output_pin caselight]
pin: P2.5
pwm: True
value: 1
#--------------------------------------------------------------------

######################################################################
# Filament sensors
######################################################################
[filament_switch_sensor RunOut]
pause_on_runout: True
insert_gcode:
 # Restore back the IDLE Timeout, should match what you set in the [idle_timeout] section
 SET_IDLE_TIMEOUT TIMEOUT=1200
 # Clear the LCD warning message, filament is back again
 M117
pause_delay: 0.5
switch_pin: !z:P1.29
runout_gcode:
 M117 Runout Detected!
 M600 X50 Y10 Z10
 
[gcode_macro M600]
gcode:
 {% set X = params.X|default(50)|int %}
 {% set Y = params.Y|default(10)|int %}
 {% set Z = params.Z|default(10)|int %}

 SAVE_GCODE_STATE NAME=M600_state
 PAUSE
 G91
 G1 E-10 F5000
 G1 Z{Z}
 G90
 G1 X{X} Y{Y} F3000
 RESTORE_GCODE_STATE NAME=M600_state
 # Setting a big idle timeout to avoid printer getting into that state. Will be restored later when the filament is changed
 # 24 hours
 SET_IDLE_TIMEOUT TIMEOUT=86400
 M117 Change Spool! 

#####################################################################
# 	Bed Mesh
#####################################################################
[bed_mesh]
speed: 500
horizontal_move_z: 8.42
mesh_min: 15,35
mesh_max: 240,225
probe_count: 7,7
fade_start: 1
split_delta_z: .01
move_check_distance: 3
mesh_pps: 2,2
algorithm: bicubic
bicubic_tension = .2
zero_reference_position: 150,150
#relative_reference_index: 24 # ^^^because we're measuring the offset from the nozzle switch to the bed using the center of the bed, the equation to find the location = (probe point count)/2-1

#####################################################################
# 	Macros
#####################################################################

[gcode_macro M204]
rename_existing: M204.1
gcode:
  {% set f = params.F|default(0.5)|float %}

  {% if 'S' in params %}
    {% set s = params.S|float %}
    SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={ s * f }
  {% else %}
    {% if 'P' in params %}
      {% set p = params.P|float %}
      {% if 'T' in params %}
        {% set t = params.T|float %}
        {% if p < t %}
          SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
        {% else %}
          SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
        {% endif %}
      {% else %}
        SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
      {% endif %}
    {% elif 'T' in params %}
      {% set t = params.T|float %}
      SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
    {% endif %}
  {% endif %}

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BASE_BED_MESH_CALIBRATE
gcode:
    M117 Calibrating Mesh
    #before the original gcode
    BED_MESH_CLEAR
    ATTACH_PROBE
    STATUS_MESHING
    #the original gcode
    BASE_BED_MESH_CALIBRATE
    #after the original gcode
    STATUS_READY
    DOCK_PROBE
    M117
    G28 Z

[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: BASE_QUAD_GANTRY_LEVEL
gcode:
    #before the original gcode
    M117 Quad Gantry Level...
    STATUS_LEVELING
    ATTACH_PROBE
    #the original gcode
    BASE_QUAD_GANTRY_LEVEL
    #after the original gcode
    G28 Z
    DOCK_PROBE
    M117 
    STATUS_READY

[gcode_macro CALIBRATE_Z]
rename_existing: BASE_CALIBRATE_Z
gcode:
    #before the original gcode
    M117 Calibrating Z...
    STATUS_CALIBRATING_Z
    ATTACH_PROBE
    BASE_CALIBRATE_Z
    DOCK_PROBE
    #after the original gcode
    M117 
    STATUS_READY

[gcode_macro G32]
gcode:
    G28
    QUAD_GANTRY_LEVEL
    G28 Z
    G0 X150 Y150 Z40 F9000

[gcode_macro CENTER_UP]
gcode:
    G0 X150 Y150 Z60 F11000

[gcode_macro LED_ON]
gcode:
    SET_PIN PIN=caselight VALUE=1.00

[gcode_macro LED_OFF]
gcode:
    SET_PIN PIN=caselight VALUE=0.00

[gcode_macro GANTRY_TEST]
gcode:
   G28
   QUAD_GANTRY_LEVEL
   {% for try in range(0, 5, 1) %}
   M117 Try: {try}
   g0 x124 y124 z100 F28000
   g0 x0 y0 f28000
   g0 x245 y245 f28000
   g0 x0 y245 f28000
   g0 x245 y0 f28000
   g0 x245 y248 f28000
   g0 x0 y0 f28000
   g0 x0 y245 f28000
   g0 x245 y0 f28000
   g0 x124 y124 z100 F28000
   QUAD_GANTRY_LEVEL
   {% endfor %}

   
[gcode_macro PRINT_START]
gcode:
   {% set BED = params.BED|default(60)|int %} 
   {% set EXTRUDER = params.EXTRUDER|default(200)|int %} 
   {% set TOOL = params.TOOL|default(0)|int %} 
   {% set MULTIMATERIAL = params.MULTIMATERIAL|default(0)|int %} 
   
   # Clear any pause state
   CLEAR_PAUSE
   # Absolut positioning
   G90
   # Turn off exhaust fan (if it was turned on)
   SET_PIN PIN=exhaust_fan value=0
   {% if printer.extruder.temperature < 190 %}
      # Heat the filament to 190C so it doesn't interfere with Z offset 
      M109 S190
   {% endif %}
   M117 Homing...                 ; display message
   BED_MESH_CLEAR
   G28                            ; home all axes

   {% if MULTIMATERIAL|int > 0 %}
   # Home MMU
     MMU_HOME
     MMU_RESET_STATS
   {% endif %}

   Attach_Probe_Lock
   QUAD_GANTRY_LEVEL
   
   G1 Z20 F3000                   ; move nozzle away from bed

   STATUS_HEATING 
   M117 Preheat (Print)           ; display message
   M190 S{BED|int}                ; Heated bed control
   M109 S{EXTRUDER|int}
   M117 Done.                     ; display message
   STATUS_READY

   # Load mesh depending on the Filament being used 
   # Based on Bed Temperature
   #{% if printer.heater_bed.target > 80 %}
   #   # Dealing with ABS here
   #   #BED_MESH_PROFILE LOAD=ABS
   #   BED_MESH_PROFILE LOAD=105
   #   M117 ABS Mesh Loaded
   #{% else %}
   #   BED_MESH_PROFILE LOAD=PLA
   #   M117 PLA Mesh Loaded
   #{% endif %}

   #BED_MESH_CALIBRATE
   #QUAD_GANTRY_LEVEL

   # Just before last Z homing, let's clean the noozle
   #G0 X10 Y230 F6000
   #CLEAN_NOZZLE

   # Calibrate Z
   CALIBRATE_Z
   DOCK_PROBE_UNLOCK
   #SET_GCODE_OFFSET Z=0.35

   # Bent Compensation
   #FORCE_MOVE STEPPER=stepper_z2 DISTANCE=-.08 VELOCITY=10
   #FORCE_MOVE STEPPER=stepper_z3 DISTANCE=-.08 VELOCITY=10

   {% if MULTIMATERIAL|int > 0 %}
     # Load filament
     MMU_CHANGE_TOOL TOOL={TOOL|int}
   {% endif %}


   # Purge Line
   SET_NOZZLE_LEDS_ON
   G92 E0 ;Reset Extruder
   G1 Z2.0 F3000 ;Move Z Axis up
   G1 X2.2 Y2 Z0.3 F10000.0 ; Move to start position

   M117 Purge Line                     ; display message

   G1 X2.2 Y200.0 Z0.3 F1500.0 E15 ; Draw the first line
   G1 X2.5 Y200.0 Z0.3 F18000.0 ; Move to side a little
   G1 X2.5 Y2 Z0.3 F1500.0 E30 ; Draw the second line
   G92 E0 ;Reset Extruder
   G1 Z4 F10000

   M117 Done!

   SET_PIN PIN=exhaust_fan value=1
   M117
   G90
   #SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=1000
   #TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.005
   #TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0.5 FACTOR=.020
   

[gcode_macro PRINT_END]
gcode:
   {% set MULTIMATERIAL = params.MULTIMATERIAL|default(0)|int %} 

   M400                           ; wait for buffer to clear

   G92 E0                         ; zero the extruder
   G1 E-4.0 F3600                 ; retract filament
   G91                            ; relative positioning
   G0 Z3.00 F20000                ; move nozzle to remove stringing
   M107                           ; turn off fan
   G1 Z5 F3000                    ; move nozzle up 5mm
   G90                            ; absolute positioning
   G0  X125 Y248 F3600            ; park nozzle at rear

   {% if MULTIMATERIAL|int > 0 %}
     MMU_EJECT
   {% endif %}

   TURN_OFF_HEATERS

   M18                           ; Disable steppers

   SET_IDLE_TIMEOUT TIMEOUT=1200
   SET_PIN PIN=exhaust_fan value=1; Turn exhaust fan, clear fumes
   M117 Filtering fumes
   STATUS_OFF
   ## Wait 15 minutes, notify user every minute
   #{% for minutes in range(15, 0, -1) %}
   #M117 Fumes: {minutes} mins left.
   #G4 P60000
   #{% endfor %}
   #SET_PIN PIN=exhaust_fan value=0; Turn exhaust fan, clear fumes
   #M117 Done

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  CANCEL_PRINT_BASE
  PRINT_END

	
# Sensor Types
#   "EPCOS 100K B57560G104F"
#   "ATC Semitec 104GT-2"
#   "NTC 100K beta 3950"
#   "Honeywell 100K 135-104LAG-J01"
#   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
#   "AD595"
#   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 40.936
#*# pid_ki = 1.882
#*# pid_kd = 222.553
#*#
#*# [stepper_z]
#*# position_endstop = 0
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 57.0
#*# shaper_type_y = mzv
#*# shaper_freq_y = 47.0
#*#
#*# [probe]
#*# z_offset = 6.117
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.020000, 0.040000, 0.040000, 0.047500, 0.032500, 0.032500, 0.022500
#*# 	0.010000, 0.020000, 0.002500, 0.007500, -0.002500, -0.005000, 0.000000
#*# 	-0.015000, -0.010000, -0.007500, -0.012500, -0.022500, -0.017500, -0.010000
#*# 	-0.017500, -0.015000, -0.007500, 0.000000, -0.007500, -0.022500, -0.015000
#*# 	-0.010000, -0.002500, -0.002500, -0.000000, -0.017500, -0.022500, -0.015000
#*# 	0.005000, 0.017500, 0.010000, 0.007500, 0.007500, -0.005000, 0.007500
#*# 	0.025000, 0.030000, 0.030000, 0.032500, 0.012500, 0.022500, 0.040000
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 240.0
#*# min_y = 35.0
#*# max_y = 224.96
