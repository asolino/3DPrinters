## Enraged Rabbit : Carrot Feeder config file with config for {brd_type} mcu
##
## IMPORTANT ERCF EASY-BRD J6 Jumper setting (ERB board doesn't require jumper setting):
## Option 1: Pins 2-3 and 4-5, i.e.  .[..][..]
## This is for sensorless selector setup. Note that this enables the option disables the "extra"
## switch so the toolhead sensor (if used) would have to be connected to the main mcu
##
## Option 2: Pins 1-2 and 4-5, i.e.  [..].[..]
## It you are NOT using sensorless selector. The "extra" switch is enabled for other uses
##
## No jumper configuration is required for Fysetc Burrows ERB board
##
#[mcu ercf]
#serial: /dev/serial/by-id/usb-Klipper_lpc1768_10700112C81848AFFFC6185DC32000F5-if00


# FILAMENT DRIVE GEAR STEPPER  ---------------------------------------------------------------------------------------------
# Adapt accordingly to your setup and desires
# The default values are tested with the BOM NEMA14 motor
# Please adapt these values to the motor you are using
# Example : for NEMA17 motors, you'll usually set the stealthchop_threshold to 0
# and use higher current
[tmc2209 manual_stepper gear_stepper]
uart_pin: P1.4
#uart_address: 0
interpolate: True
run_current: 1			# NEMA14 motor
hold_current: 0.5			# Can be small
sense_resistor: 0.110
stealthchop_threshold: 0		# 999999 to enable stealthChop

[manual_stepper gear_stepper]
step_pin: P0.1
dir_pin: P0.0
enable_pin: !P0.10
rotation_distance: 5.76576		# Bondtech 5mm Drive Gears. Must be manually verified and tuned.
#gear_ratio: 80:20
microsteps: 2 				# Recommend 8 or 16. Try both to avoid Klipper 'Timer too close' error (also try adjusting num_moves)
full_steps_per_rotation: 200		# 200 for 1.8 degree, 400 for 0.9 degree
velocity: 50
accel: 400
#
# Uncomment if you want to use sensorless SELECTOR with the ERCF EASY BRD (yes, this is on the gear stepper!)
# This should be the pin of the physical selector endstop and is used to determine the difference between the true
# endstop and a blockage preventing selector movement. Don't forget to set 'sensorless_selector: 0' in ercf_parameters.cfg
endstop_pin: !P1.29	# Comment if using physical endstop switch (default)


# SELECTOR STEPPER  --------------------------------------------------------------------------------------------------------
[tmc2209 manual_stepper selector_stepper]
uart_pin: P1.14
#uart_address: 1
run_current: 0.55
hold_current: 0.25			# Can be small
interpolate: True
sense_resistor: 0.110
stealthchop_threshold: 5000		# 999999 to enable stealthChop
#
# Uncomment the lines below if you want to use sensorless selector homing
# (and configure ercf_parameters.cfg correctly)
# or comment out if using physical endstop switch (default)
#diag_pin: ^{selector_diag_pin}			# Set to MCU pin connected to TMC DIAG pin
#driver_SGTHRS: 75			# 255 is most sensitive value, 0 is least sensitive

[manual_stepper selector_stepper]
step_pin: P0.22
dir_pin: P2.11
enable_pin: !P0.21
rotation_distance: 40
microsteps: 16 				# Don't need high fidelity
full_steps_per_rotation: 200		# 200 for 1.8 degree, 400 for 0.9 degree
#velocity: 200
velocity: 50
#accel: 600
accel: 200
#
# Select the endstop switch physical (for normal selector) or virtual (sensorless selector homing)
#endstop_pin: tmc2209_selector_stepper:virtual_endstop	# Uncomment for sensorless selector homing
endstop_pin: !P1.27				# Uncomment for physical homing option (default)


# SELECTOR SERVO -----------------------------------------------------------------------------------------------------------
[servo ercf_servo]
pin: P1.25
maximum_servo_angle: 180
minimum_pulse_width: 0.00085
maximum_pulse_width: 0.00215
#initial_angle:	30			# You may want to set this to your "up" angle after calibration


# Comment this section if you are sure you never want clog detection.
# Otherwise defining it here allows for ability to easily turn clog detection on/off
#
# ERCF Clog detection START
[duplicate_pin_override]
pins: P1.29				# Pin used by the encoder and filament_motion_sensor. All 3 must be the same pin

[filament_motion_sensor encoder_sensor]
switch_pin: ^P1.29
pause_on_runout: False			# Must be false
detection_length: 2			# This is the default detection - it overridden during calibration with calculated length
extruder: extruder
runout_gcode: ERCF_ENCODER_RUNOUT
# ERCF Clog detection END


# Uncomment this section to enable toolhead sensor support
#
## ERCF Toolhead sensor START
#[filament_switch_sensor toolhead_sensor]
#pause_on_runout: False			# Must be False
#switch_pin: {dummy_pin_must_set_me}
## ERCF Toolhead sensor END

